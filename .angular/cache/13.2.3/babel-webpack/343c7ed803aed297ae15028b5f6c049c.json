{"ast":null,"code":"import { FileElement } from 'src/app/models/file-element.model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/servies/file.service\";\nimport * as i2 from \"@angular/material/card\";\nimport * as i3 from \"../file-explorer/file-explorer.component\";\nexport let DashboardComponent = /*#__PURE__*/(() => {\n  class DashboardComponent {\n    constructor(fileService) {\n      this.fileService = fileService;\n      this.fileElements = [];\n      this.currentRoot = new FileElement();\n      this.currentPath = \"\";\n      this.canNavigateUp = false;\n    }\n\n    ngOnInit() {}\n\n    addFolder(folder) {\n      let fileElement = new FileElement();\n      fileElement.name = folder.name;\n      fileElement.isFolder = true;\n      fileElement.parent = this.currentRoot ? this.currentRoot.id : 'root';\n      this.fileService.add(fileElement);\n      this.updateFileElementQuery();\n    }\n\n    removeElement(element) {\n      this.fileService.delete(element.id);\n      this.updateFileElementQuery();\n    }\n\n    navigateToFolder(element) {}\n\n    moveElement(event) {\n      this.fileService.update(event.element.id, {\n        parent: event.moveTo.id\n      });\n      this.updateFileElementQuery();\n    }\n\n    renameElement(element) {\n      this.fileService.update(element.id, {\n        name: element.name\n      });\n      this.updateFileElementQuery();\n    }\n\n    updateFileElementQuery() {\n      this.fileElements = this.fileService.queryInFolder(this.currentRoot ? this.currentRoot.id : 'root');\n    }\n\n    navigateUp() {}\n\n  }\n\n  DashboardComponent.ɵfac = function DashboardComponent_Factory(t) {\n    return new (t || DashboardComponent)(i0.ɵɵdirectiveInject(i1.FileService));\n  };\n\n  DashboardComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: DashboardComponent,\n    selectors: [[\"app-dashboard\"]],\n    decls: 3,\n    vars: 3,\n    consts: [[2, \"padding\", \"100px\", \"height\", \"100%\", \"box-sizing\", \"border-box\"], [2, \"height\", \"100%\", \"box-sizing\", \"border-box\", \"padding\", \"0\"], [3, \"fileElements\", \"path\", \"canNavigateUp\", \"folderAdded\", \"elementRemoved\", \"navigatedDown\", \"navigatedUp\", \"elementRenamed\", \"elementMoved\"]],\n    template: function DashboardComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"mat-card\", 1);\n        i0.ɵɵelementStart(2, \"file-explorer\", 2);\n        i0.ɵɵlistener(\"folderAdded\", function DashboardComponent_Template_file_explorer_folderAdded_2_listener($event) {\n          return ctx.addFolder($event);\n        })(\"elementRemoved\", function DashboardComponent_Template_file_explorer_elementRemoved_2_listener($event) {\n          return ctx.removeElement($event);\n        })(\"navigatedDown\", function DashboardComponent_Template_file_explorer_navigatedDown_2_listener($event) {\n          return ctx.navigateToFolder($event);\n        })(\"navigatedUp\", function DashboardComponent_Template_file_explorer_navigatedUp_2_listener() {\n          return ctx.navigateUp();\n        })(\"elementRenamed\", function DashboardComponent_Template_file_explorer_elementRenamed_2_listener($event) {\n          return ctx.renameElement($event);\n        })(\"elementMoved\", function DashboardComponent_Template_file_explorer_elementMoved_2_listener($event) {\n          return ctx.moveElement($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"fileElements\", ctx.fileElements)(\"path\", ctx.currentPath)(\"canNavigateUp\", ctx.canNavigateUp);\n      }\n    },\n    directives: [i2.MatCard, i3.FileExplorerComponent],\n    styles: [\"\"]\n  });\n  return DashboardComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}