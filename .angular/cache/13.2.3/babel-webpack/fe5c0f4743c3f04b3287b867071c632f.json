{"ast":null,"code":"import { Observable } from 'rxjs';\nimport { FileElement } from 'src/app/models/file-element.model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/servies/file.service\";\nexport let DashboardComponent = /*#__PURE__*/(() => {\n  class DashboardComponent {\n    constructor(fileService) {\n      this.fileService = fileService;\n      this.fileElements = new Observable();\n      this.currentRoot = new FileElement();\n      this.currentPath = \"\";\n      this.canNavigateUp = false;\n    }\n\n    ngOnInit() {}\n\n    addFolder(folder) {\n      this.fileService.add({\n        isFolder: true,\n        name: folder.name,\n        parent: this.currentRoot ? this.currentRoot.id : 'root'\n      });\n      this.updateFileElementQuery();\n    }\n\n    removeElement(element) {\n      this.fileService.delete(element.id);\n      this.updateFileElementQuery();\n    }\n\n    moveElement(event) {\n      this.fileService.update(event.element.id, {\n        parent: event.moveTo.id\n      });\n      this.updateFileElementQuery();\n    }\n\n    renameElement(element) {\n      this.fileService.update(element.id, {\n        name: element.name\n      });\n      this.updateFileElementQuery();\n    }\n\n    updateFileElementQuery() {\n      this.fileElements = this.fileService.queryInFolder(this.currentRoot ? this.currentRoot.id : 'root');\n    }\n\n  }\n\n  DashboardComponent.ɵfac = function DashboardComponent_Factory(t) {\n    return new (t || DashboardComponent)(i0.ɵɵdirectiveInject(i1.FileService));\n  };\n\n  DashboardComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: DashboardComponent,\n    selectors: [[\"app-dashboard\"]],\n    decls: 2,\n    vars: 0,\n    template: function DashboardComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"p\");\n        i0.ɵɵtext(1, \"dashboard works!\");\n        i0.ɵɵelementEnd();\n      }\n    },\n    styles: [\"\"]\n  });\n  return DashboardComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}